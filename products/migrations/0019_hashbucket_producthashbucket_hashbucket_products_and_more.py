# Generated by Django 5.1.4 on 2025-07-26 05:02

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0018_product_discounted_price_product_is_men_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HashBucket',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('bucket_id', models.CharField(max_length=100)),
                ('hash_type', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductHashBucket',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('hash_distance', models.FloatField(default=0.0)),
                ('bucket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.hashbucket')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'unique_together': {('product', 'bucket')},
            },
        ),
        migrations.AddField(
            model_name='hashbucket',
            name='products',
            field=models.ManyToManyField(through='products.ProductHashBucket', to='products.product'),
        ),
        migrations.CreateModel(
            name='SentimentAnalysis',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('overall_sentiment', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral')], max_length=10)),
                ('sentiment_score', models.FloatField(default=0.0)),
                ('confidence', models.FloatField(default=0.0)),
                ('processed_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sentiment', to='products.productreview')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AspectSentiment',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('aspect', models.CharField(max_length=50)),
                ('sentiment', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral')], max_length=10)),
                ('sentiment_score', models.FloatField(default=0.0)),
                ('confidence', models.FloatField(default=0.0)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aspect_sentiments', to='products.productreview')),
            ],
            options={
                'unique_together': {('review', 'aspect')},
            },
        ),
        migrations.CreateModel(
            name='ProductFeature',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('feature_name', models.CharField(max_length=100)),
                ('feature_value', models.FloatField(default=0.0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='products.product')),
            ],
            options={
                'unique_together': {('product', 'feature_name')},
            },
        ),
        migrations.CreateModel(
            name='ProductHash',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('hash_type', models.CharField(choices=[('content', 'Content Hash'), ('feature', 'Feature Hash'), ('image', 'Image Hash')], max_length=20)),
                ('hash_value', models.CharField(max_length=255)),
                ('hash_metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hashes', to='products.product')),
            ],
            options={
                'unique_together': {('product', 'hash_type')},
            },
        ),
        migrations.CreateModel(
            name='ProductSimilarity',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('similarity_score', models.FloatField(default=0.0)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('product1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_as_product1', to='products.product')),
                ('product2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_as_product2', to='products.product')),
            ],
            options={
                'unique_together': {('product1', 'product2')},
            },
        ),
        migrations.CreateModel(
            name='SentimentTrend',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('positive_count', models.IntegerField(default=0)),
                ('negative_count', models.IntegerField(default=0)),
                ('neutral_count', models.IntegerField(default=0)),
                ('average_sentiment', models.FloatField(default=0.0)),
                ('total_reviews', models.IntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_trends', to='products.product')),
            ],
            options={
                'unique_together': {('product', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserBehavior',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('behavior_type', models.CharField(choices=[('view', 'Product View'), ('cart_add', 'Added to Cart'), ('purchase', 'Purchased'), ('wishlist', 'Added to Wishlist'), ('review', 'Reviewed')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('weight', models.FloatField(default=1.0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_behaviors', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behaviors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'product', 'behavior_type')},
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('price_range_min', models.IntegerField(default=0)),
                ('price_range_max', models.IntegerField(default=10000)),
                ('weight', models.FloatField(default=1.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'category', 'brand')},
            },
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('rating', models.FloatField(default=0.0)),
                ('confidence', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_ratings', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculated_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.CreateModel(
            name='UserSimilarity',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('similarity_score', models.FloatField(default=0.0)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user1', 'user2')},
            },
        ),
    ]
